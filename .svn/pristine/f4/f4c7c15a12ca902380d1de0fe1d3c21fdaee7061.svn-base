package com.nebulacompanies.ibo.activities;

import android.annotation.SuppressLint;
import android.app.Dialog;
import android.app.ProgressDialog;
import android.content.ActivityNotFoundException;
import android.content.Intent;
import android.content.pm.ApplicationInfo;
import android.content.pm.PackageManager;
import android.graphics.Color;
import android.graphics.Typeface;
import android.graphics.drawable.ColorDrawable;
import android.net.Uri;
import android.os.Bundle;
import android.util.Log;
import android.util.TypedValue;
import android.view.Gravity;
import android.view.View;
import android.view.Window;
import android.view.WindowManager;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;

import androidx.appcompat.app.AppCompatActivity;

import com.google.gson.Gson;
import com.nebulacompanies.ibo.Network.APIClient;
import com.nebulacompanies.ibo.Network.APIInterface;
import com.nebulacompanies.ibo.ecom.MainActivity;
import com.nebulacompanies.ibo.ecom.MyAddressAccountActivity;
import com.nebulacompanies.ibo.ecom.model.ProfileModelEcom;
import com.nebulacompanies.ibo.ecom.utils.MyTextViewEcom;
import com.nebulacompanies.ibo.ecom.utils.Utils;
import com.nebulacompanies.ibo.shoppy.R;
import com.nebulacompanies.ibo.sweetdialogue.SweetAlertDialog;
import com.nebulacompanies.ibo.util.Constants;
import com.nebulacompanies.ibo.util.Session;

import retrofit2.Call;
import retrofit2.Callback;
import retrofit2.Response;

import static com.nebulacompanies.ibo.util.Const.REQUEST_STATUS_CODE_ERROR;
import static com.nebulacompanies.ibo.util.Constants.REQUEST_STATUS_CODE_SERVICE_UNAVAILABLE;

public class ShoppyHomeScreen extends AppCompatActivity {

    LinearLayout layPurchaseHistory, layEcom,layShare,layRate,layContact,layFb,layYoutube,layProfile,layAddress;
    Button logout;
    Session session;
    Typeface typeface;
    APIInterface mAPIInterfaceProfile;
    MyTextViewEcom tvProfileName, tvProfileEmail, tvProfileMobile, tvProfileGender;
    ImageView imgProfileClose;
    Utils utils = new Utils();
    @SuppressLint("NonConstantResourceId")
    @Override

    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_shoppy_home);
        Utils.darkenStatusBar(this, R.color.colorNotification);

        session = new Session(this);
        initUI();
    }

    private void initUI() {
        layEcom = findViewById(R.id.lay_shopecom);
        layPurchaseHistory = findViewById(R.id.lay_purchase_history);
        layShare = findViewById(R.id.lay_share);
        layRate = findViewById(R.id.lay_rate);
        layContact = findViewById(R.id.lay_contact);
        layFb = findViewById(R.id.lay_fb);
        layYoutube = findViewById(R.id.lay_youtube);
        logout = findViewById(R.id.btn_logout);
        layProfile = findViewById(R.id.lay_profile);
        layAddress = findViewById(R.id.lay_address);

        layProfile.setOnClickListener(v->{
            getMyProfile();
        });

        layAddress.setOnClickListener(v->{
            Intent intent = new Intent(this, MyAddressAccountActivity.class);
            startActivity(intent);
        });


        layEcom.setOnClickListener(v -> {
            layEcom.setEnabled(false);
            Intent dash = new Intent(ShoppyHomeScreen.this, MainActivity.class);
            startActivity(dash);
            overridePendingTransition(R.anim.push_left_in, R.anim.push_left_out);
        });
        layPurchaseHistory.setOnClickListener(v -> {
            layPurchaseHistory.setEnabled(false);
           /* Intent intent = new Intent(this, OrderListActivity.class);
            startActivity(intent);
            overridePendingTransition(R.anim.push_left_in, R.anim.push_left_out);*/
        });

        layShare.setOnClickListener(v->{
            Intent shareIntent = new Intent(Intent.ACTION_SEND);
            shareIntent.setType("text/plain");
            shareIntent.putExtra(Intent.EXTRA_SUBJECT, "Nebula");
            String shareMessage = "\nLet me recommend you this application\n\n";
            shareMessage = shareMessage + "http://play.google.com/store/apps/details?id=" + getPackageName();
            shareIntent.putExtra(Intent.EXTRA_TEXT, shareMessage);
            startActivity(Intent.createChooser(shareIntent, "Share via"));
        });
        layRate.setOnClickListener(v->{
            Uri uri = Uri.parse("market://details?id=" + getPackageName());
            Intent goToMarket = new Intent(Intent.ACTION_VIEW, uri);
            // To count with Play market backstack, After pressing back button,
            // to taken back to our application, we need to add following flags to intent.
            goToMarket.addFlags(Intent.FLAG_ACTIVITY_NO_HISTORY |
                    Intent.FLAG_ACTIVITY_NEW_DOCUMENT |
                    Intent.FLAG_ACTIVITY_MULTIPLE_TASK);
            try {
                startActivity(goToMarket);
            } catch (ActivityNotFoundException e) {
                startActivity(new Intent(Intent.ACTION_VIEW,
                        Uri.parse("http://play.google.com/store/apps/details?id=" + getPackageName())));
            }
        });

        layContact.setOnClickListener(v->{
            Intent intent = new Intent(ShoppyHomeScreen.this, ContactUs.class);
            intent.putExtra("showSpotLightView", true);
            startActivity(intent);
        });

        layFb.setOnClickListener(v->{
            if (Utils.isNetworkAvailable(this)) {
                String url = "https://www.facebook.com/nebulacompanies/";
                Uri uri = Uri.parse(url);
                try {
                    ApplicationInfo applicationInfo = this.getPackageManager().getApplicationInfo("com.facebook.katana", 0);
                    if (applicationInfo.enabled) {
                        uri = Uri.parse("fb://facewebmodal/f?href=" + url);
                    }
                } catch (PackageManager.NameNotFoundException ignored) {
                }
                Intent intent = new Intent(Intent.ACTION_VIEW, uri);
                startActivity(intent);
            } else {
                utils.dialogueNoInternet(this);
            }
        });

        layYoutube.setOnClickListener(v->{
            if (Utils.isNetworkAvailable(this)) {
                Intent intent = new Intent(Intent.ACTION_VIEW, Uri.parse("https://www.youtube.com/c/nebulacompanies?sub_confirmation=1"));
                intent.addFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP | Intent.FLAG_ACTIVITY_NEW_TASK);
                intent.setPackage("com.google.android.youtube");
                startActivity(intent);
                this.overridePendingTransition(R.anim.push_left_in, R.anim.push_left_out);
            } else {
                utils.dialogueNoInternet(this);
            }
        });

        logout.setOnClickListener(v->{
            getLogout();
        });
    }

    @Override
    protected void onResume() {
        super.onResume();
        layEcom.setEnabled(true);
        layPurchaseHistory.setEnabled(true);
    }


    private void getMyProfile() {
        if (Utils.isNetworkAvailable(this)) {


            mAPIInterfaceProfile = APIClient.getClient(this).create(APIInterface.class);
            Call<ProfileModelEcom> wsCallingEvents = mAPIInterfaceProfile.getMyProfileEcom();
            wsCallingEvents.enqueue(new Callback<ProfileModelEcom>() {
                @Override
                public void onResponse(Call<ProfileModelEcom> call, Response<ProfileModelEcom> response) {

                    if (response.isSuccessful()) {
                        if (response.code() == 200) {
                            Log.d("PROFILEAPI", "PROFILEAPI: " + response);
                            if (response.body().getStatusCode() == Constants.REQUEST_STATUS_CODE_SUCCESS) {

                                Log.d("PROFILEAPIResponse", "PROFILEAPIResponse: " + new Gson().toJson(response.body()));
                                String firstName = response.body().getData().getFirstName();
                                String lastName = response.body().getData().getLastName();
                                String email = response.body().getData().getEmail();
                                String gender = response.body().getData().getGender();
                                String mobile = response.body().getData().getMobile();
                                Log.d("firstName", "firstName: " + firstName);

                                Log.d("PROFILEAPIIN", "PROFILEAPIIN: " + response);
                                Dialog dialog = new Dialog(ShoppyHomeScreen.this);
                                dialog.requestWindowFeature(Window.FEATURE_NO_TITLE);
                                dialog.getWindow().setBackgroundDrawable(new ColorDrawable(Color.TRANSPARENT));

                                dialog.setContentView(R.layout.dialog_profile);

                                WindowManager.LayoutParams lp = new WindowManager.LayoutParams();

                                // This is line that does all the magic
                                lp.copyFrom(dialog.getWindow().getAttributes());
                                lp.width = WindowManager.LayoutParams.MATCH_PARENT;
                                lp.height = WindowManager.LayoutParams.WRAP_CONTENT;
                                lp.gravity = Gravity.CENTER;
                                dialog.getWindow().setAttributes(lp);

                                tvProfileName = (MyTextViewEcom) dialog.findViewById(R.id.tv_my_profile_name);
                                tvProfileEmail = (MyTextViewEcom) dialog.findViewById(R.id.tv_my_profile_email);
                                tvProfileMobile = (MyTextViewEcom) dialog.findViewById(R.id.tv_my_profile_mobile);
                                tvProfileGender = (MyTextViewEcom) dialog.findViewById(R.id.tv_my_profile_gender);
                                imgProfileClose = (ImageView) dialog.findViewById(R.id.img_profile_close);

                                tvProfileName.setText(firstName);
                                tvProfileEmail.setText(email);
                                tvProfileMobile.setText(mobile);
                                tvProfileGender.setText(gender);

                                imgProfileClose.setOnClickListener(v -> dialog.dismiss());
                                dialog.show();

                            } else if (response.body().getStatusCode() == REQUEST_STATUS_CODE_ERROR
                                    || response.body().getStatusCode() == REQUEST_STATUS_CODE_SERVICE_UNAVAILABLE) {
                            }

                        }
                    } else if (response.code() == 401) {
                        Log.d("AddressListGETINData401", "AddressListGETINData: " + new Gson().toJson(response.body()));


                    }
                }

                @Override
                public void onFailure(Call<ProfileModelEcom> call, Throwable t) {
                    Log.d("PROFILEAPIINERROR", "PROFILEAPIINERROR: " + t);

                }
            });
        } else {
            utils.dialogueNoInternet(this);
        }
    }



    @SuppressLint("SetTextI18n")
    void getLogout() {
        SweetAlertDialog loading = new SweetAlertDialog(this, SweetAlertDialog.NORMAL_TYPE);
        loading.setCancelable(true);
        loading.setConfirmText("OK");
        loading.setCancelText("Cancel");
        loading.setOnShowListener(dialog -> {
            SweetAlertDialog alertDialog = (SweetAlertDialog) dialog;
            TextView textTitle = alertDialog.findViewById(R.id.title_text);
            TextView textContent = alertDialog.findViewById(R.id.content_text);
            Button btnConfirm = alertDialog.findViewById(R.id.confirm_button);
            Button btnCancel = alertDialog.findViewById(R.id.cancel_button);
            textTitle.setTextSize(TypedValue.COMPLEX_UNIT_SP, 15);

            textContent.setTypeface(typeface);
            textTitle.setTypeface(typeface);
            btnConfirm.setTypeface(typeface);
            btnCancel.setTypeface(typeface);
            textTitle.setText("Logout");
            btnConfirm.setText("OK");
            btnCancel.setText("Cancel");
            textContent.setText("Are you sure you want to logout?");
            textContent.setGravity(Gravity.NO_GRAVITY);
            btnConfirm.setOnClickListener(v -> {
                ProgressDialog progressDialog;
                progressDialog = new ProgressDialog(this, R.style.MyTheme);
                try {
                    progressDialog.show();
                } catch (Error ignored) { }
                progressDialog.setContentView(R.layout.progressdialog);
                progressDialog.setCancelable(false);
                progressDialog.getWindow().setBackgroundDrawable(new ColorDrawable(Color.TRANSPARENT));

                if (progressDialog.isShowing()) {
                    progressDialog.dismiss();
                }
                new Utils().doLogout(this, session);
                Intent i = new Intent(this, LoginActivity.class);
                i.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK | Intent.FLAG_ACTIVITY_CLEAR_TASK);
                loading.dismiss();
                startActivity(i);
                finish();
            });
            btnCancel.setOnClickListener(view -> dialog.dismiss());
        });
        loading.show();
    }

}